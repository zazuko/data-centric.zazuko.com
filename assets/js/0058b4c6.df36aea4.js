"use strict";(self.webpackChunkdata_centric_zazuko_com=self.webpackChunkdata_centric_zazuko_com||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"aboutSidebar":[{"type":"link","label":"Intro","href":"/docs/about/","docId":"about/about","unlisted":false},{"type":"link","label":"Di\xe1taxis","href":"/docs/about/diataxis","docId":"about/diataxis","unlisted":false}],"rdfjsSidebar":[{"type":"link","label":"RDF/JS","href":"/docs/rdfjs/","docId":"rdfjs/rdfjs","unlisted":false}],"workflowsSidebar":[{"type":"link","label":"Introduction","href":"/docs/workflows/","docId":"workflows/workflows","unlisted":false},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting started","href":"/docs/workflows/tutorial/first-pipeline","docId":"workflows/tutorial/first-pipeline","unlisted":false}]},{"type":"category","label":"How-To","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Implement steps","href":"/docs/workflows/how-to/implement-steps","docId":"workflows/how-to/implement-steps","unlisted":false},{"type":"link","label":"Automate pipelines","href":"/docs/workflows/how-to/automate-pipeline","docId":"workflows/how-to/automate-pipeline","unlisted":false},{"type":"link","label":"Extend barnard59 CLI","href":"/docs/workflows/how-to/extend-banard59-cli","docId":"workflows/how-to/extend-banard59-cli","unlisted":false},{"type":"link","label":"Fail pipeline gracefully","href":"/docs/workflows/how-to/fail-pipeline-gently","docId":"workflows/how-to/fail-pipeline-gently","unlisted":false},{"type":"link","label":"Remove meta CSVW triples","href":"/docs/workflows/how-to/remove-meta-csvw-triples","docId":"workflows/how-to/remove-meta-csvw-triples","unlisted":false}]},{"type":"category","label":"Explanations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Pipeline Concepts","href":"/docs/workflows/explanations/pipeline","docId":"workflows/explanations/pipeline","unlisted":false},{"type":"link","label":"Operations","href":"/docs/workflows/explanations/operations","docId":"workflows/explanations/operations","unlisted":false},{"type":"link","label":"Simplified Syntax","href":"/docs/workflows/explanations/simplified-syntax","docId":"workflows/explanations/simplified-syntax","unlisted":false},{"type":"link","label":"Writing valid pipelines","href":"/docs/workflows/explanations/pipeline-validity","docId":"workflows/explanations/pipeline-validity","unlisted":false}]},{"type":"category","label":"Reference","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"barnard59 CLI","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"graph-store","href":"/docs/workflows/reference/cli/graph-store","docId":"workflows/reference/cli/graph-store","unlisted":false}],"href":"/docs/workflows/reference/cli/"},{"type":"link","label":"Loaders","href":"/docs/workflows/reference/loaders","docId":"workflows/reference/loaders","unlisted":false}]}],"apisSidebar":[{"type":"link","label":"Data-Centric APIs","href":"/docs/apis/","docId":"apis/apis","unlisted":false},{"type":"category","label":"Kopflos","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"How-To","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Use express middleware","href":"/docs/apis/kopflos/how-to/express-middleware","docId":"apis/kopflos/how-to/express-middleware","unlisted":false},{"type":"link","label":"Serve RDF in data-bound HTML","href":"/docs/apis/kopflos/how-to/html-templates","docId":"apis/kopflos/how-to/html-templates","unlisted":false},{"type":"link","label":"Load API description","href":"/docs/apis/kopflos/how-to/load-api","docId":"apis/kopflos/how-to/load-api","unlisted":false},{"type":"link","label":"Implement parametrised handlers","href":"/docs/apis/kopflos/how-to/parametrised-handlers","docId":"apis/kopflos/how-to/parametrised-handlers","unlisted":false},{"type":"link","label":"Serve virtual resources","href":"/docs/apis/kopflos/how-to/patterned-target","docId":"apis/kopflos/how-to/patterned-target","unlisted":false},{"type":"link","label":"Configure resource loaders","href":"/docs/apis/kopflos/how-to/resource-loaders","docId":"apis/kopflos/how-to/resource-loaders","unlisted":false},{"type":"link","label":"Select which resources should be served by the API","href":"/docs/apis/kopflos/how-to/resource-shape","docId":"apis/kopflos/how-to/resource-shape","unlisted":false},{"type":"link","label":"Seed database on app start","href":"/docs/apis/kopflos/how-to/seed-database","docId":"apis/kopflos/how-to/seed-database","unlisted":false},{"type":"link","label":"Render Web Components on the server","href":"/docs/apis/kopflos/how-to/server-side-rendering","docId":"apis/kopflos/how-to/server-side-rendering","unlisted":false},{"type":"link","label":"Configure SPARQL endpoints","href":"/docs/apis/kopflos/how-to/sparql-endpoints","docId":"apis/kopflos/how-to/sparql-endpoints","unlisted":false},{"type":"link","label":"Integrate with web server libraries","href":"/docs/apis/kopflos/how-to/web-server-libraries","docId":"apis/kopflos/how-to/web-server-libraries","unlisted":false}]},{"type":"category","label":"Explanations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Request pipeline","href":"/docs/apis/kopflos/explanations/request-pipeline","docId":"apis/kopflos/explanations/request-pipeline","unlisted":false}]},{"type":"category","label":"Reference","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"@kopflos-cms/serve-file","href":"/docs/apis/kopflos/reference/modules/serve-file","docId":"apis/kopflos/reference/modules/serve-file","unlisted":false},{"type":"link","label":"@kopflos-cms/vite","href":"/docs/apis/kopflos/reference/modules/vite","docId":"apis/kopflos/reference/modules/vite","unlisted":false}]},{"type":"link","label":"Command Line Interface","href":"/docs/apis/kopflos/reference/cli","docId":"apis/kopflos/reference/cli","unlisted":false},{"type":"link","label":"Configuration","href":"/docs/apis/kopflos/reference/configuration","docId":"apis/kopflos/reference/configuration","unlisted":false},{"type":"link","label":"Request handlers","href":"/docs/apis/kopflos/reference/request-handlers","docId":"apis/kopflos/reference/request-handlers","unlisted":false}]}],"href":"/docs/apis/kopflos/"}],"cubesSidebar":[{"type":"link","label":"RDF Data Cubes","href":"/docs/cubes/","docId":"cubes/cubes","unlisted":false},{"type":"category","label":"How-To","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Validate RDF Data Cubes","href":"/docs/cubes/how-to/validate-cube","docId":"cubes/how-to/validate-cube","unlisted":false}]},{"type":"category","label":"Explanations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cube validation profiles","href":"/docs/cubes/explanations/profiles","docId":"cubes/explanations/profiles","unlisted":false}]}],"appsSidebar":[{"type":"link","label":"Introduction","href":"/docs/apps/","docId":"apps/apps","unlisted":false},{"type":"category","label":"Zazuko Blueprint","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Presentation","href":"/docs/apps/blueprint/presentation","docId":"apps/blueprint/presentation","unlisted":false},{"type":"link","label":"Deploy using Docker","href":"/docs/apps/blueprint/docker","docId":"apps/blueprint/docker","unlisted":false},{"type":"link","label":"Deploy on Kubernetes","href":"/docs/apps/blueprint/kubernetes","docId":"apps/blueprint/kubernetes","unlisted":false}]}]},"docs":{"about/about":{"id":"about/about","title":"Intro","description":"These pages present various methods for building data-centric software using RDF and (mostly) JavaScript.","sidebar":"aboutSidebar"},"about/diataxis":{"id":"about/diataxis","title":"Di\xe1taxis","description":"All documentation is written according to Di\xe1taxis principles,","sidebar":"aboutSidebar"},"apis/apis":{"id":"apis/apis","title":"Data-Centric APIs","description":"Data-centric APIs are designed to provide a structured and standardized way to access and","sidebar":"apisSidebar"},"apis/kopflos/explanations/request-pipeline":{"id":"apis/kopflos/explanations/request-pipeline","title":"Request pipeline","description":"Incoming request","sidebar":"apisSidebar"},"apis/kopflos/how-to/express-middleware":{"id":"apis/kopflos/how-to/express-middleware","title":"Use express middleware","description":"The package @kopflos-cms/express allows you to use existing express middleware in your Kopflos project.","sidebar":"apisSidebar"},"apis/kopflos/how-to/html-templates":{"id":"apis/kopflos/how-to/html-templates","title":"Serve RDF in data-bound HTML","description":"This guide will show you how to serve HTML templates bound to RDF data.","sidebar":"apisSidebar"},"apis/kopflos/how-to/load-api":{"id":"apis/kopflos/how-to/load-api","title":"Load API description","description":"A Kopflos API is composed of triples that describe the API\'s structure and behavior. These triples need to be loaded into the API\'s store before the API can be used.","sidebar":"apisSidebar"},"apis/kopflos/how-to/parametrised-handlers":{"id":"apis/kopflos/how-to/parametrised-handlers","title":"Implement parametrised handlers","description":"Positional arguments","sidebar":"apisSidebar"},"apis/kopflos/how-to/patterned-target":{"id":"apis/kopflos/how-to/patterned-target","title":"Serve virtual resources","description":"In addition to shtargetClass, a specialised target can be used to match","sidebar":"apisSidebar"},"apis/kopflos/how-to/resource-loaders":{"id":"apis/kopflos/how-to/resource-loaders","title":"Configure resource loaders","description":"As explained on the Request pipeline page, early in the request pipeline, Kopflos selects a resource loader to load the requested resource\'s Core Representation.","sidebar":"apisSidebar"},"apis/kopflos/how-to/resource-shape":{"id":"apis/kopflos/how-to/resource-shape","title":"Select which resources should be served by the API","description":"The central concept of the Kopflos is the Resource Shape. Its main purpose is to define which resources should be served by the API and how they should be served. Resource Shapes reuse some SHACL concepts.","sidebar":"apisSidebar"},"apis/kopflos/how-to/seed-database":{"id":"apis/kopflos/how-to/seed-database","title":"Seed database on app start","description":"When you start your app, you might want to seed the database with some initial data. This can be done","sidebar":"apisSidebar"},"apis/kopflos/how-to/server-side-rendering":{"id":"apis/kopflos/how-to/server-side-rendering","title":"Render Web Components on the server","description":"This guide will show you how to serve server-side rendered content with Kopflos.","sidebar":"apisSidebar"},"apis/kopflos/how-to/sparql-endpoints":{"id":"apis/kopflos/how-to/sparql-endpoints","title":"Configure SPARQL endpoints","description":"Kopflos can be configured with one or more SPARQL endpoints which can be accessed at runtime by","sidebar":"apisSidebar"},"apis/kopflos/how-to/web-server-libraries":{"id":"apis/kopflos/how-to/web-server-libraries","title":"Integrate with web server libraries","description":"All libraries integrated with Kopflos require the same configuration, at the very least the SPARQL endpoint URL and the API graph URL(s).","sidebar":"apisSidebar"},"apis/kopflos/kopflos":{"id":"apis/kopflos/kopflos","title":"Kopflos","description":"Kopflos is Data-Centric API. Named \\"headless\\", it focuses on","sidebar":"apisSidebar"},"apis/kopflos/reference/cli":{"id":"apis/kopflos/reference/cli","title":"Command Line Interface","description":"Use kopflos to manage a Kopflos API.","sidebar":"apisSidebar"},"apis/kopflos/reference/configuration":{"id":"apis/kopflos/reference/configuration","title":"Configuration","description":"Kopflos can be configured via a configuration file, which can be in various formats and locations. If not provided, it will try various default locations:","sidebar":"apisSidebar"},"apis/kopflos/reference/modules/serve-file":{"id":"apis/kopflos/reference/modules/serve-file","title":"@kopflos-cms/serve-file","description":"Serves a file from the file system and sets content-type header based on the file extension.","sidebar":"apisSidebar"},"apis/kopflos/reference/modules/vite":{"id":"apis/kopflos/reference/modules/vite","title":"@kopflos-cms/vite","description":"Plugin configuration","sidebar":"apisSidebar"},"apis/kopflos/reference/request-handlers":{"id":"apis/kopflos/reference/request-handlers","title":"Request handlers","description":"Depending on the kind of Resource Shape matched to the request, different arguments will be passed","sidebar":"apisSidebar"},"apps/apps":{"id":"apps/apps","title":"Data Centric Applications","description":"A data-centric application is a software system primarily focused on managing, processing, and utilizing data.","sidebar":"appsSidebar"},"apps/blueprint/docker":{"id":"apps/blueprint/docker","title":"Deploy Zazuko Blueprint using Docker","description":"We are providing a container image for Zazuko Blueprint, that gets built automatically on every push to the main branch.","sidebar":"appsSidebar"},"apps/blueprint/kubernetes":{"id":"apps/blueprint/kubernetes","title":"Deploy Zazuko Blueprint on Kubernetes","description":"You can deploy Zazuko Blueprint on Kubernetes using the provided Helm chart.","sidebar":"appsSidebar"},"apps/blueprint/presentation":{"id":"apps/blueprint/presentation","title":"Zazuko Blueprint Presentation","description":"Zazuko Blueprint is an enterprise knowledge graph frontend and browser, designed to make RDF Knowledge Graphs accessible and customizable for domain users.","sidebar":"appsSidebar"},"cubes/cubes":{"id":"cubes/cubes","title":"RDF Data Cubes","description":"This section contains information about practical usage of RDF Data Cubes represented with the cube.link Cube Schema.","sidebar":"cubesSidebar"},"cubes/explanations/profiles":{"id":"cubes/explanations/profiles","title":"Cube validation profiles","description":"For new, see https://github.com/zazuko/cube-link/?tab=readme-ov-file#validation-shapes","sidebar":"cubesSidebar"},"cubes/how-to/validate-cube":{"id":"cubes/how-to/validate-cube","title":"Validate RDF Data Cubes","description":"RDF Data Cubes can be validated in a number of ways:","sidebar":"cubesSidebar"},"rdfjs/rdfjs":{"id":"rdfjs/rdfjs","title":"RDF/JS","description":"RDF/JS is a set of W3C community specifications which give developers a common denominator","sidebar":"rdfjsSidebar"},"workflows/explanations/operations":{"id":"workflows/explanations/operations","title":"Operations","description":"Obviously you want to convert your own data. To do that, barnard59 provides a bunch of default features in so called operations. To understand how you can add your own steps and pipelines, consult the barnard59 readme.","sidebar":"workflowsSidebar"},"workflows/explanations/pipeline":{"id":"workflows/explanations/pipeline","title":"Pipeline Concepts","description":"Concept","sidebar":"workflowsSidebar"},"workflows/explanations/pipeline-validity":{"id":"workflows/explanations/pipeline-validity","title":"Writing valid pipelines","description":"Step Lists","sidebar":"workflowsSidebar"},"workflows/explanations/simplified-syntax":{"id":"workflows/explanations/simplified-syntax","title":"Simplified Syntax","description":"To avoid verbose step definitions, a simplified syntax allows to reduce boilerplate for common operations.","sidebar":"workflowsSidebar"},"workflows/how-to/automate-pipeline":{"id":"workflows/how-to/automate-pipeline","title":"Automate pipelines","description":"There is lots of RDF data published as one can see in the Linked Open Data Cloud Diagram. Unfortunately a lot of this data was a one-time effort by a research project or an individual and is not kept up to date. One of the design goals of barnard59 is to simplify automation so RDF data can be kept up to date with little to no effort, at least as long as the data source stays stable.","sidebar":"workflowsSidebar"},"workflows/how-to/extend-banard59-cli":{"id":"workflows/how-to/extend-banard59-cli","title":"Extend barnard59 CLI","description":"To create additional CLI commands for the barnard59 CLI you will need to first create and publish","sidebar":"workflowsSidebar"},"workflows/how-to/fail-pipeline-gently":{"id":"workflows/how-to/fail-pipeline-gently","title":"Fail pipeline gracefully","description":"The easiest way to stop a pipeline is to throw an exception. However, this will stop the pipeline immediately.","sidebar":"workflowsSidebar"},"workflows/how-to/implement-steps":{"id":"workflows/how-to/implement-steps","title":"Implement steps","description":"As explained on the Pipeline Concepts page, steps are linked from a pipeline using","sidebar":"workflowsSidebar"},"workflows/how-to/remove-meta-csvw-triples":{"id":"workflows/how-to/remove-meta-csvw-triples","title":"Remove meta CSVW triples","description":"The CSVW specification requires the output to produce certain meta-triples which annotate","sidebar":"workflowsSidebar"},"workflows/reference/cli/graph-store":{"id":"workflows/reference/cli/graph-store","title":"graph-store","description":"Commands","sidebar":"workflowsSidebar"},"workflows/reference/cli/index":{"id":"workflows/reference/cli/index","title":"barnard59 CLI","description":"Main options","sidebar":"workflowsSidebar"},"workflows/reference/loaders":{"id":"workflows/reference/loaders","title":"Loaders","description":"In addition to those provided by rdf-loader-code,","sidebar":"workflowsSidebar"},"workflows/tutorial/first-pipeline":{"id":"workflows/tutorial/first-pipeline","title":"Getting started","description":"In this tutorial we will create a simple pipeline which fetches the current time from a Web API at","sidebar":"workflowsSidebar"},"workflows/workflows":{"id":"workflows/workflows","title":"Introduction to RDF Workflows","description":"barnard59 primer","sidebar":"workflowsSidebar"}}}}')}}]);