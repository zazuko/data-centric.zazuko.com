"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[109],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=d(n),f=a,m=c["".concat(p,".").concat(f)]||c[f]||u[f]||o;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1917:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const o={},i="Loaders",l={unversionedId:"workflows/reference/loaders",id:"workflows/reference/loaders",title:"Loaders",description:"In addition to those provided by rdf-loader-code,",source:"@site/docs/workflows/reference/loaders.md",sourceDirName:"workflows/reference",slug:"/workflows/reference/loaders",permalink:"/docs/workflows/reference/loaders",draft:!1,editUrl:"https://github.com/zazuko/data-centric.zazuko.com/tree/main/docs/workflows/reference/loaders.md",tags:[],version:"current",frontMatter:{},sidebar:"workflowsSidebar",previous:{title:"Writing valid pipelines",permalink:"/docs/workflows/explanations/pipeline-validity"}},p={},d=[{value:"<code>p:Pipeline</code>",id:"ppipeline",level:2},{value:"<code>p:Variable(Name)</code>",id:"pvariablename",level:2},{value:"<code>p:FileContents</code>",id:"pfilecontents",level:2},{value:"Basic usage",id:"basic-usage",level:3},{value:"Path in variable",id:"path-in-variable",level:3},{value:"Home dir paths",id:"home-dir-paths",level:3}],s={toc:d},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"loaders"},"Loaders"),(0,a.kt)("p",null,"In addition to those provided by ",(0,a.kt)("a",{parentName:"p",href:"https://npm.im/rdf-loader-code"},"rdf-loader-code"),",\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"barnard59-core")," package provides additional loaders to simplify the definition of pipelines."),(0,a.kt)("h2",{id:"ppipeline"},(0,a.kt)("inlineCode",{parentName:"h2"},"p:Pipeline")),(0,a.kt)("p",null,"TBD"),(0,a.kt)("h2",{id:"pvariablename"},(0,a.kt)("inlineCode",{parentName:"h2"},"p:Variable(Name)")),(0,a.kt)("p",null,"TBD"),(0,a.kt)("h2",{id:"pfilecontents"},(0,a.kt)("inlineCode",{parentName:"h2"},"p:FileContents")),(0,a.kt)("p",null,"Reads file from a given path and returns its raw contents."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"p:FileContents")," is a literal node")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This loader may not be suitable for loading large files because they are synchronously put into memory")),(0,a.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-turtle"},'@prefix code: <https://code.described.at/> .\n@prefix p: <https://pipeline.described.at/> .\n\n<step>\n    code:arguments\n        (\n            "/full/path/myKeyFile.key"^^p:FileContent\n        )\n.\n')),(0,a.kt)("h3",{id:"path-in-variable"},"Path in variable"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"p:FileContent")," literal can also be the name of a variable."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-turtle"},'@prefix code: <https://code.described.at/> .\n@prefix p: <https://pipeline.described.at/> .\n\n<pipeline>\n    p:variables [\n        p:variable [ p:name "KEY_PATH" ; p:value "/full/path/myKeyFile.key" ] ;\n    ] ;\n.\n\n<step>\n    code:arguments\n        (\n            "KEY_PATH"^^p:FileContent\n        )\n.\n')),(0,a.kt)("h3",{id:"home-dir-paths"},"Home dir paths"),(0,a.kt)("p",null,"For convenience, bash-style paths stating with ",(0,a.kt)("inlineCode",{parentName:"p"},"~")," are also supported."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-turtle"},'@prefix code: <https://code.described.at/> .\n@prefix p: <https://pipeline.described.at/> .\n\n<step>\n    a p:Step ;\n    code:implementedBy\n        [\n            a code:EcmaScriptModule ;\n            code:link <node:barnard59-ftp/list.js#default> ;\n        ] ;\n    code:arguments\n        [\n            code:name "privateKey" ;\n            code:value "~/.ssh/id_ed25519"^^p:FileContent ;\n        ] ;\n.\n')))}u.isMDXComponent=!0}}]);