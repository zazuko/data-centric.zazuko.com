"use strict";(self.webpackChunkdata_centric_zazuko_com=self.webpackChunkdata_centric_zazuko_com||[]).push([[302],{4962:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"workflows/reference/cli/graph-store","title":"graph-store","description":"Commands","source":"@site/docs/workflows/reference/cli/graph-store.md","sourceDirName":"workflows/reference/cli","slug":"/workflows/reference/cli/graph-store","permalink":"/docs/workflows/reference/cli/graph-store","draft":false,"unlisted":false,"editUrl":"https://github.com/zazuko/data-centric.zazuko.com/tree/main/docs/workflows/reference/cli/graph-store.md","tags":[],"version":"current","frontMatter":{"title":"graph-store"},"sidebar":"workflowsSidebar","previous":{"title":"barnard59 CLI","permalink":"/docs/workflows/reference/cli/"},"next":{"title":"Loaders","permalink":"/docs/workflows/reference/loaders"}}');var t=r(4848),a=r(8453);const s={title:"graph-store"},l="barnard59 graph-store",d={},i=[{value:"Commands",id:"commands",level:2},{value:"put command",id:"put-command",level:2},{value:"--source",id:"--source",level:3},{value:"--endpoint",id:"--endpoint",level:3},{value:"--graph",id:"--graph",level:3}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"barnard59-graph-store",children:(0,t.jsx)(n.code,{children:"barnard59 graph-store"})})}),"\n",(0,t.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"barnard59 graph-store --help             \n\nUsage: barnard59 graph-store [options] [command]\n\nOptions:\n  -V, --version   output the version number\n  -h, --help      display help for command\n\nCommands:\n  put [options]   Upload RDF documents using SPARQL Graph Store Protocol\n  help [command]  display help for command\n"})}),"\n",(0,t.jsx)(n.h2,{id:"put-command",children:"put command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"barnard59.js graph-store put --help\n\nUsage: barnard59 graph-store put [options]\n\nUpload RDF documents using SPARQL Graph Store Protocol\n\nOptions:\n  --source <source>        Glob of RDF documents to upload\n  --graph <graph>\n  --endpoint <endpoint>\n  --user <user>\n  --password <password>\n  --variable <name=value>  variable key value pairs (default: {})\n  --variable-all           Import all environment variables\n  -v, --verbose            enable diagnostic console output\n  -h, --help               display help for command\n"})}),"\n",(0,t.jsx)(n.h3,{id:"--source",children:"--source"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Required option"})}),"\n",(0,t.jsxs)(n.p,{children:["When setting the value of ",(0,t.jsx)(n.code,{children:"--source"})," make sure to wrap it in quotation to prevent the shell from expanding the globbed path."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'barnard59 graph-store put --source "data/*.ttl"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"--endpoint",children:"--endpoint"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Required option"})}),"\n",(0,t.jsx)(n.h3,{id:"--graph",children:"--graph"}),"\n",(0,t.jsx)(n.p,{children:"The URL of the target graph. If not given, the graph will be taken directly from the data stream."}),"\n",(0,t.jsx)(n.p,{children:"When uploading RDF graph documents (n3, turtle, n-triples), the default graph will be used."}),"\n",(0,t.jsx)(n.p,{children:"When uploading RDF dataset documents, the graphs will be used exactly as they are in the data."})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var o=r(6540);const t={},a=o.createContext(t);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);